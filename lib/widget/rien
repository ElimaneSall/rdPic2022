import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:tuto_firebase/homeApp.dart';
import '../utils/color/color.dart';
import '../widget/reusableTextField.dart';

class SignUp extends StatefulWidget {
  const SignUp({
    Key? key,
  }) : super(key: key);

  @override
  State<SignUp> createState() => _SignUpState();
}

class _SignUpState extends State<SignUp> {
  TextEditingController _userNameTextController = TextEditingController();
  TextEditingController _nameTextController = TextEditingController();
  TextEditingController _promoTextController = TextEditingController();
  TextEditingController _emailTextController = TextEditingController();
  TextEditingController _passwordTextController = TextEditingController();
  TextEditingController _password2TextController = TextEditingController();
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: Container(
            width: MediaQuery.of(context).size.width,
            height: MediaQuery.of(context).size.height,
            decoration: BoxDecoration(
                gradient: LinearGradient(colors: [
              hexStringToColor("000"),
              hexStringToColor("000"),
              hexStringToColor("dd9933"),
            ], begin: Alignment.topCenter, end: Alignment.bottomCenter)),
            child: SingleChildScrollView(
                child: Padding(
                    padding: EdgeInsets.fromLTRB(
                        20, MediaQuery.of(context).size.height * 0.2, 20, 0),
                    child: Column(children: <Widget>[
                      SizedBox(
                        height: 20,
                      ),
                      reusableTextField(
                          "Entrer votre nom ",
                          Icons.person_outline,
                          false,
                          _nameTextController,
                          Colors.white),
                      SizedBox(
                        height: 20,
                      ),
                      reusableTextField(
                          "Entrer votre prenom ",
                          Icons.person_outline,
                          false,
                          _userNameTextController,
                          Colors.white),
                      SizedBox(
                        height: 20,
                      ),
                      reusableTextField(
                          "Entrer votre Email",
                          Icons.person_outline,
                          false,
                          _emailTextController,
                          Colors.white),
                      SizedBox(
                        height: 20,
                      ),
                      reusableTextField(
                          "Entrer votre mot de passe",
                          Icons.person_outline,
                          false,
                          _passwordTextController,
                          Colors.white),
                      SizedBox(
                        height: 20,
                      ),
                      reusableTextField(
                          "Retaper votre mot de passe",
                          Icons.person_outline,
                          false,
                          _password2TextController,
                          Colors.white),
                      SizedBox(
                        height: 20,
                      ),
                      reusableTextField(
                          "Entrer votre promo ",
                          Icons.person_outline,
                          false,
                          _promoTextController,
                          Colors.white),
                      SizedBox(
                        height: 20,
                      ),
                      signInSignUpButton("S'inscrire", context, false, () {
                        if (_password2TextController ==
                                _passwordTextController &&
                            ["46", "47", "48", "48", "49", "50"]
                                .contains(_promoTextController)) {
                          FirebaseAuth.instance
                              .createUserWithEmailAndPassword(
                                  email: _emailTextController.text,
                                  password: _passwordTextController.text)
                              .then((value) {
                            FirebaseFirestore.instance
                                .collection('Users')
                                .doc(FirebaseAuth.instance.currentUser!.uid
                                    .toString())
                                .set({
                              'email': _emailTextController.value.text,
                              'promo': _emailTextController.value.text,
                              'nom': _nameTextController.value.text,
                              'admin': false,
                              "id": FirebaseAuth.instance.currentUser!.uid
                                  .toString()
                            });
                            print("account creating success");
                            Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) => HomeApp()));
                          }).onError((error, stackTrace) {
                            print("Error" + error.toString());
                          });
                        }
                      }),
                    ])))));
  }
}





import 'dart:io';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/material.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:image_picker/image_picker.dart';

class PageTest extends StatefulWidget {
  const PageTest({Key? key}) : super(key: key);

  @override
  State<PageTest> createState() => _PageTestState();
}

class _PageTestState extends State<PageTest> {
  File? _image;

  Future<void> _pickImage() async {
    final PickedFile? pickedFile =
        await ImagePicker().getImage(source: ImageSource.gallery);
    print("send success1");
    setState(() {
      _image = File(pickedFile!.path);
      //  _submit();
      print("send success");
    });
  }

  String _uploadStatus = 'Idle';

  _submit(File image) async {
    final FirebaseStorage storage = FirebaseStorage.instance;
    Reference ref = storage.ref().child('images/profile_image.jpg');
    UploadTask uploadTask = ref.putFile(File(image.path));
    uploadTask.then((res) {
      res.ref.getDownloadURL();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(title: Text("Upload")),
        body: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            if (_image != null)
              Image.file(
                _image!,
                width: 200,
                height: 200,
                fit: BoxFit.cover,
              ),
            ElevatedButton(
              onPressed: _pickImage,
              child: Text('Pick Image'),
            ),
            ElevatedButton(
              onPressed: () => _submit(_image!),
              child: Text('envoyer'),
            ),
          ],
        ));
  }
}
